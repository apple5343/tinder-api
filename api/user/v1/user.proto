syntax = "proto3";

package user_v1;

import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";

option go_package = "generated/go/user/v1";

service AuthService {
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc GetRefreshToken (GetRefreshTokenRequest) returns (GetRefreshTokenResponse);
    rpc GetAccessToken (GetAccessTokenRequest) returns (GetAccessTokenResponse);
}

service UserService {
    rpc GetUser (GetUserRequest) returns (GetUserResponse);
    rpc GetProfile (GetProfileRequest) returns (GetProfileResponse);
    rpc GetPublicProfile (GetPublicProfileRequest) returns (GetPublicProfileResponse);
    rpc UpdateProfile (UpdateProfileRequest) returns (UpdateProfileResponse);
    rpc AddAvatar (AddAvatarRequest) returns (AddAvatarResponse);
    rpc DeleteAvatar (DeleteAvatarRequest) returns (google.protobuf.Empty);
}

message GetUserRequest {
    string uuid = 1;
}

message GetUserResponse {
    User user = 1;
}

message GetProfileRequest {
    string uuid = 1;
}

message GetProfileResponse {
    PrivateUser user = 1;
}

message GetPublicProfileRequest {
    string uuid = 1;
}

message GetPublicProfileResponse {
    PublicUser user = 1;
}

message UpdateProfileRequest {
    string uuid = 1;
    google.protobuf.FieldMask update_mask = 2;
    string first_name = 3;
    string last_name = 4;
    int32 age = 5;
    string gender = 6;
}

message UpdateProfileResponse {
    PrivateUser user = 1;
}

message AddAvatarRequest {
    string uuid = 1;
    bytes image = 2;
}

message AddAvatarResponse {
    PrivateUser user = 1;
}

message DeleteAvatarRequest {
    string uuid = 1;
    string user_id = 2;
}

message UserInfo {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
    int32 age = 4;
    string gender = 5;
    repeated string avatar_urls = 6;
}

message UserInfoPublic {
    string first_name = 1;
    string last_name = 2;
    repeated string avatar_url = 3;
    int32 age = 4;
    string gender = 5;
}


message User {
    string uuid = 1;
    string username = 2;
    UserInfo info = 4;
}

message PrivateUser {
    string uuid = 1;
    string username = 2;
    UserInfo info = 3;
}

message PublicUser {
    string uuid = 1;
    string username = 2;
    UserInfoPublic info = 3;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    string refresh_token = 1;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    UserInfo info = 3;
}

message RegisterResponse {
    string refresh_token = 1;
}

message GetRefreshTokenRequest {
    string refresh_token = 1;
}

message GetRefreshTokenResponse {
    string refresh_token = 1;
}

message GetAccessTokenRequest {
    string refresh_token = 1;
}

message GetAccessTokenResponse {
    string access_token = 1;
}